Scale.default = list(range(12))
def structure(f):
    f()
    return f
@structure
def a0():
	d0 >> pluck([5, 5, 7, 9, 7, 9, 10, 9, 7, 7, 5, -60, 9, 10, 9, 7],dur=[1.0 ,1.0 ,1.0 ,1.0 ,0.5 ,0.5 ,1.0 ,1.0 ,1.5 ,0.5 ,2.0 ,rest(1.0) ,1.0 ,1.0 ,1.0 ,1.0])
	d1 >> pluck([0, 0, -1, 0, 2, 4, 5, 7, 5, 4, 2, 4, 0, -60, 5, 5, 7, 5, 4],dur=[1.0 ,0.5 ,0.5 ,1.5 ,0.5 ,1.0 ,0.5 ,1.0 ,1.0 ,0.25 ,0.25 ,1.0 ,2.0 ,rest(1.0) ,1.0 ,0.5 ,1.0 ,1.0 ,0.5])
	d2 >> pluck([-3, -5, -7, 0, -2, -3, -2, 0, -7, 0, 0, 2, -2, -5, 0, -2, -3, -60, 0, 2, 0, 0, 2, 0],dur=[0.5 ,0.5 ,1.0 ,0.5 ,0.5 ,0.5 ,0.5 ,1.0 ,0.5 ,0.5 ,1.0 ,0.5 ,0.5 ,0.5 ,0.25 ,0.25 ,2.0 ,rest(1.0) ,1.0 ,0.5 ,0.5 ,1.0 ,0.5 ,0.5])
	d3 >> pluck([-7, -8, -10, -8, -12, -7, -12, -10, -8, -7, -14, -12, -19, -60, -7, -9, -10, -8, -7, -13, -12],dur=[0.5 ,0.5 ,1.0 ,0.5 ,0.5 ,1.0 ,1.0 ,0.5 ,0.5 ,1.0 ,1.0 ,1.0 ,2.0 ,rest(1.0) ,0.5 ,0.5 ,0.5 ,0.5 ,1.0 ,0.5 ,0.5])
@structure
def a1():
	d0 >> pluck([5, 4, 5, 7, 12, 10, 9, 7, 5, 4, 5, 2, 0, 9, 10, 9, 7],dur=[1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,0.5 ,0.5 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0])
	d1 >> pluck([2, -5, 0, 0, 4, 6, 7, 4, 5, 4, 2, 0, 0, 2, 0, -1, -5, 5, 3, 2, 4, 5, 4],dur=[1.0 ,1.0 ,1.0 ,1.0 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,1.5 ,0.5 ,0.5 ,0.25 ,0.25 ,1.0 ,1.0 ,0.5 ,0.5 ,0.5 ,0.5 ,1.5 ,0.5])
	d2 >> pluck([0, -1, 0, -7, -8, -3, 2, 1, 2, -5, -5, -3, -5, -7, -8, 0, -2, 0, 0, -2],dur=[0.5 ,0.5 ,1.0 ,1.0 ,1.0 ,1.0 ,0.5 ,0.5 ,1.0 ,1.0 ,1.0 ,1.0 ,0.5 ,0.5 ,1.0 ,1.0 ,1.0 ,1.0 ,0.75 ,0.25])
	d3 >> pluck([-10, -12, -14, -15, -19, -12, -15, -17, -10, -12, -13, -12, -19, -17, -12, -19, -17, -15, -14, -12],dur=[1.0 ,0.5 ,0.5 ,0.5 ,0.5 ,1.0 ,1.0 ,1.0 ,0.5 ,0.5 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,0.5 ,0.5 ,1.0])
Clock.clear()

start = Clock.mod(16) - 0.1
Clock.schedule(a0, start + 0)
Clock.schedule(a1, start + 16)
Clock.schedule(lambda : Clock.clear(), start + 32)
