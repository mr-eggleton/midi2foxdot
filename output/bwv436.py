Scale.default = list(range(12))
def structure(f):
    f()
    return f
@structure
def a0():
	d0 >> pluck([4, 11, 8, 6, 4, 11, 13, 13, 11, 11, 13, 15, 16, 15, 13, 13, 11],dur=[1.0 ,1.0 ,0.5 ,0.5 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0])
	d1 >> pluck([-1, -1, -1, 1, 3, 8, 6, 6, 8, 9, 9, 8, 6, 6, 8, 6, 4, 3],dur=[1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,0.5 ,0.5 ,0.5 ,0.5 ,1.0])
	d2 >> pluck([-4, -6, -8, -6, -4, -2, -1, -1, -2, 3, 4, 4, 6, -1, -1, -1, -2, -1],dur=[1.0 ,1.0 ,0.5 ,0.5 ,0.5 ,0.5 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0])
	d3 >> pluck([-8, -9, -8, -11, -4, -8, -6, -13, -8, -3, -4, -6, -4, -2, -1, -6, -18, -13],dur=[1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,0.5 ,0.5 ,0.5 ,0.5 ,1.0 ,1.0 ,1.0 ,1.0])
@structure
def a1():
	d0 >> pluck([8, 13, 11, 9, 8, 6, 4, -60, 11, 8, 11, 8],dur=[1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,2.0 ,1.0 ,rest(1.0) ,2.0 ,2.0 ,2.0 ,1.0])
	d1 >> pluck([4, 4, 3, 4, 6, 8, 4, 4, 3, -1, -60, 6, 4, 6, 4],dur=[1.0 ,1.0 ,1.0 ,0.5 ,0.5 ,0.5 ,0.5 ,1.0 ,1.0 ,1.0 ,rest(1.0) ,2.0 ,2.0 ,2.0 ,1.0])
	d2 >> pluck([-1, -3, -4, -6, 1, -1, -1, -3, -4, -60, -1, -1, 3, -1],dur=[1.0 ,0.5 ,0.5 ,1.0 ,1.0 ,1.0 ,1.5 ,0.5 ,1.0 ,rest(1.0) ,2.0 ,2.0 ,2.0 ,1.0])
	d3 >> pluck([-8, -15, -13, -11, -9, -8, -13, -8, -60, -9, -8, -13, -8],dur=[1.0 ,1.0 ,1.0 ,0.5 ,0.5 ,1.0 ,2.0 ,1.0 ,rest(1.0) ,2.0 ,2.0 ,2.0 ,1.0])
@structure
def a2():
	d0 >> pluck([8, 9, 8, 6, 8, 9, 8, 6, 8, 9, 8, 6, 4, 16],dur=[1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,2.0 ,2.0 ,1.0])
	d1 >> pluck([4, 6, 4, 3, 4, 6, 4, 3, 4, 6, 4, 3, 1, 3, 4, 3, -1, 8],dur=[1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,0.5 ,0.5 ,0.5 ,0.25 ,0.25 ,1.0 ,2.0 ,1.0])
	d2 >> pluck([-1, 1, -1, -1, -1, -1, -1, -1, -1, 1, 3, 4, 4, 1, -1, -3, -4, 1, -1],dur=[1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,0.5 ,0.5 ,1.0 ,0.5 ,0.5 ,0.5 ,0.5 ,2.0 ,0.5 ,0.5])
	d3 >> pluck([-8, -6, -4, -3, -4, -6, -8, -9, -8, -13, -1, -3, -4, -6, -11, -13, -15, -13, -8, -11],dur=[1.0 ,1.0 ,1.0 ,0.5 ,0.5 ,0.5 ,0.5 ,1.0 ,1.0 ,0.5 ,0.5 ,0.5 ,0.5 ,1.0 ,0.5 ,0.5 ,1.0 ,1.0 ,2.0 ,1.0])
Clock.clear()

start = Clock.mod(16) - 0.1
Clock.schedule(a0, start + 0)
Clock.schedule(a1, start + 16)
Clock.schedule(a2, start + 32)
Clock.schedule(lambda : Clock.clear(), start + 48)
