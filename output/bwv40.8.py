Scale.default = list(range(12))
def structure(f):
    f()
    return f
@structure
def a0():
	d0 >> pluck([12, 12, 10, 8, 7, 5, 5, 5, 8, 10, 12, 12, 10, 8, 8],dur=[1.0 ,1.0 ,1.0 ,1.0 ,1.5 ,0.5 ,1.0 ,1.0 ,1.5 ,0.5 ,1.0 ,1.0 ,1.5 ,0.5 ,2.0])
	d1 >> pluck([5, 5, 5, 4, 5, 5, 7, 4, 5, 0, 5, 7, 8, 8, 8, 5, 7, 3],dur=[1.0 ,1.0 ,0.5 ,0.5 ,1.0 ,0.5 ,0.5 ,1.0 ,1.0 ,1.0 ,1.5 ,0.5 ,1.0 ,1.0 ,0.5 ,0.5 ,1.0 ,2.0])
	d2 >> pluck([-4, -3, -2, 0, 1, 0, -2, -4, -4, 0, -2, 3, 3, 5, 3, 1, 0],dur=[1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,0.5 ,0.5 ,1.0 ,1.0 ,1.5 ,0.5 ,1.0 ,1.0 ,1.0 ,0.5 ,0.5 ,2.0])
	d3 >> pluck([-7, -9, -11, -12, -14, -12, -19, -19, -7, -9, -11, -12, -14, -16, -11, -9, -16],dur=[1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,0.5 ,0.5 ,0.5 ,0.5 ,1.0 ,1.0 ,1.0 ,2.0])
@structure
def a1():
	d0 >> pluck([8, 10, 10, 8, 7, 5, 5, 12, 12, 13, 13, 10, 10, 12, 12],dur=[1.0 ,1.0 ,1.0 ,1.0 ,1.5 ,0.5 ,2.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0])
	d1 >> pluck([5, 7, 4, 5, 5, 4, 0, 5, 5, 5, 5, 7, 8, 10, 7, 8, 8],dur=[1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,2.0 ,1.0 ,1.0 ,1.0 ,1.0 ,0.5 ,0.5 ,0.5 ,0.5 ,1.0 ,1.0])
	d2 >> pluck([1, 1, -5, -7, -4, 1, 0, -2, -4, -3, -2, 0, -3, -2, -2, -2, 3, 3, 3],dur=[1.0 ,1.0 ,1.0 ,0.5 ,0.5 ,1.0 ,0.5 ,0.5 ,2.0 ,0.5 ,0.5 ,0.5 ,0.5 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0])
	d3 >> pluck([-11, -12, -14, -12, -11, -14, -12, -19, -7, -5, -3, -7, -14, -12, -11, -14, -9, -7, -5, -9, -4, -4],dur=[1.0 ,0.5 ,0.5 ,1.0 ,1.0 ,1.0 ,1.0 ,2.0 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,1.0 ,1.0])
@structure
def a2():
	d0 >> pluck([8, 8, 13, 13, 12, 12, 10, 7, 8, 10, 8, 7, 7, 5],dur=[1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,2.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,2.0])
	d1 >> pluck([5, 5, 10, 10, 10, 9, 5, 4, 5, 5, 4, 5, 5, 4, 0],dur=[1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,2.0 ,1.0 ,1.0 ,0.5 ,0.5 ,1.0 ,1.0 ,1.0 ,2.0])
	d2 >> pluck([1, 1, 5, 5, 6, 5, 3, 1, 0, 0, -2, 0, 1, 0, -2, -4],dur=[1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,0.5 ,0.5 ,2.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,0.5 ,0.5 ,2.0])
	d3 >> pluck([-11, -9, -7, -11, -14, -12, -11, -14, -9, -12, -7, -14, -2, -4, -5, -7, -14, -12, -19],dur=[0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,1.0 ,2.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,2.0])
@structure
def a3():
	d0 >> pluck([17, 17, 15, 15, 14, 14, 12, 12, 12, 12, 13, 12, 10, 8, 8, 8],dur=[1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.5 ,0.5 ,1.0 ,1.0])
	d1 >> pluck([8, 8, 7, 7, 7, 8, 7, 5, 4, 4, 5, 5, 5, 7, 8, 8, 5, 7, 3, 3],dur=[1.0 ,1.0 ,1.0 ,1.0 ,0.5 ,0.5 ,0.5 ,0.5 ,1.0 ,1.0 ,1.0 ,1.0 ,0.5 ,0.5 ,1.0 ,0.5 ,0.5 ,1.0 ,1.0 ,1.0])
	d2 >> pluck([0, 0, 0, 0, 0, -1, 0, -5, -3, -3, -2, -9, 3, 1, 0, 0],dur=[1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.5 ,0.5 ,1.0 ,1.0])
	d3 >> pluck([-19, -17, -16, -14, -12, -10, -9, -7, -5, -17, -12, -12, -7, -9, -11, -12, -14, -12, -11, -9, -9, -16, -16],dur=[0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,1.0 ,1.0 ,1.0 ,1.0 ,0.5 ,0.5 ,0.5 ,0.5 ,1.0 ,0.5 ,0.5 ,1.0 ,1.0 ,1.0 ,1.0])
@structure
def a4():
	d0 >> pluck([3, 8, 13, 13, 10, 10, 15, 15, 12, 12, 17, 17, 16, 16, 17, 17],dur=[1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0])
	d1 >> pluck([5, 5, 10, 10, 7, 7, 12, 12, 8, 7, 8, 10, 12, 10, 8, 7, 7, 9, 9],dur=[1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,0.5 ,0.5 ,0.5 ,0.5 ,1.0 ,0.5 ,0.5 ,1.0 ,1.0 ,1.0 ,1.0])
	d2 >> pluck([1, 1, 5, 5, 3, 3, 7, 7, 5, 5, 0, -7, 0, 0, 0, 0],dur=[1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0])
	d3 >> pluck([-11, -9, -11, -12, -14, -12, -11, -14, -9, -7, -9, -11, -12, -11, -9, -12, -7, -8, -7, -5, -4, -5, -4, -2, 0, -12, -7, -7],dur=[0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,1.0 ,1.0 ,1.0 ,1.0])
Clock.clear()

start = Clock.mod(16) - 0.1
Clock.schedule(a0, start + 0)
Clock.schedule(a1, start + 16)
Clock.schedule(a2, start + 32)
Clock.schedule(a3, start + 48)
Clock.schedule(a4, start + 64)
Clock.schedule(lambda : Clock.clear(), start + 80)
