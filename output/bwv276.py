Scale.default = list(range(12))
def structure(f):
    f()
    return f
@structure
def a0():
	d0 >> pluck([9, 7, 9, 11, 12, 14, 9, 9, 5, 7, 9, 7, 5, 4, 2, 4, 2, -60],dur=[1.0 ,1.0 ,0.5 ,0.5 ,1.0 ,1.0 ,2.0 ,1.0 ,0.5 ,0.5 ,0.5 ,0.5 ,1.0 ,0.5 ,0.5 ,1.0 ,2.0 ,rest(1.0)])
	d1 >> pluck([5, 5, 4, 4, 8, 9, 7, 7, 5, 4, 5, 4, 2, 0, 1, 2, 1, 2, 1, -3, -60],dur=[1.0 ,0.5 ,0.5 ,0.5 ,0.5 ,1.5 ,0.5 ,0.5 ,0.25 ,0.25 ,1.0 ,1.0 ,1.0 ,0.5 ,0.5 ,1.0 ,0.5 ,1.0 ,0.5 ,2.0 ,rest(1.0)])
	d2 >> pluck([2, 0, -1, 0, 2, 4, 5, 4, 2, 2, -3, -3, -3, -3, -2, -7, -5, -3, -5, -7, -60],dur=[0.5 ,0.5 ,1.0 ,0.5 ,0.5 ,0.5 ,0.25 ,0.25 ,1.0 ,2.0 ,1.0 ,1.0 ,1.0 ,1.0 ,0.5 ,0.5 ,0.5 ,0.25 ,0.25 ,2.0 ,rest(1.0)])
	d3 >> pluck([-10, -8, -10, -12, -13, -15, -14, -12, -10, -11, -10, -8, -7, -19, -17, -14, -15, -10, -60],dur=[1.0 ,0.75 ,0.25 ,0.5 ,0.5 ,1.0 ,0.75 ,0.25 ,2.0 ,1.0 ,0.5 ,0.5 ,1.5 ,0.5 ,0.5 ,0.5 ,1.0 ,2.0 ,rest(1.0)])
@structure
def a1():
	d0 >> pluck([5, 7, 7, 2, 0, 5, 7, 9, 9, 7, 5, 7, 9, 7, 5, 4, 2, 4],dur=[1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,0.5 ,0.5 ,1.0 ,1.0 ,0.5 ,0.5 ,1.0 ,1.0 ,1.0 ,1.0])
	d1 >> pluck([2, 2, 0, -1, 0, -1, -3, -2, 0, 2, 4, 5, 4, 4, 2, 1, 2, 0, -2, -3, -1, 1],dur=[1.0 ,0.5 ,0.25 ,0.25 ,1.5 ,1.0 ,0.25 ,0.25 ,0.5 ,0.5 ,1.0 ,1.0 ,1.0 ,0.5 ,1.0 ,0.5 ,1.5 ,0.5 ,0.5 ,1.0 ,0.5 ,1.0])
	d2 >> pluck([-3, -8, -7, -5, -5, -10, -8, -7, -5, -3, -7, -2, 0, -3, -3, -5, -2, -3, -3, -5, -3, -5, -7, -5, -7, -8, -7, -8],dur=[1.0 ,0.5 ,0.5 ,1.0 ,0.25 ,0.25 ,1.0 ,0.25 ,0.25 ,0.5 ,0.5 ,1.0 ,1.0 ,1.0 ,1.0 ,0.5 ,0.5 ,1.0 ,0.25 ,0.25 ,0.5 ,0.25 ,0.25 ,0.5 ,0.25 ,0.25 ,0.5 ,1.0])
	d3 >> pluck([-22, -20, -19, -17, -16, -15, -15, -14, -15, -17, -19, -11, -10, -8, -7, -8, -10, -10, -11, -10, -15],dur=[1.0 ,1.5 ,0.5 ,0.5 ,0.5 ,1.0 ,0.5 ,0.5 ,0.5 ,0.5 ,1.0 ,1.0 ,1.0 ,1.0 ,0.5 ,0.5 ,1.0 ,0.5 ,0.5 ,1.0 ,1.0])
@structure
def a2():
	d0 >> pluck([4, 2, 2, 2, 2, 9, 9, 7, 9, 10, 12, 14, 9],dur=[1.0 ,1.0 ,1.0 ,2.0 ,4.0 ,1.0 ,1.0 ,1.0 ,0.5 ,0.5 ,1.0 ,1.0 ,1.0])
	d1 >> pluck([1, 2, 0, 0, -2, -2, -3, -5, -3, 5, 4, 2, 7, 10, 9, 7, 5, 5],dur=[1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,0.5 ,0.5 ,2.0 ,1.0 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,2.0 ,1.0])
	d2 >> pluck([-8, -3, -5, -3, -6, -5, -10, -5, -5, -6, -8, -6, 2, 0, -1, 0, 0, 0, -2, 0],dur=[1.0 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,1.0 ,1.0 ,0.5 ,0.5 ,2.0 ,1.0 ,0.5 ,0.5 ,1.0 ,1.0 ,1.5 ,0.5 ,1.0])
	d3 >> pluck([-15, -18, -20, -18, -22, -17, -15, -14, -17, -10, -22, -10, -8, -7, -7, -8, -7, -5, -3, -7, -2, -7],dur=[1.0 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,2.0 ,2.0 ,0.5 ,0.5 ,1.0 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,1.0 ,1.0])
@structure
def a3():
	d0 >> pluck([9, 9, 7, 5, 7, 9, 7, 5, 4, 2, 4, 2, 5, 7, 7, 2, 0, 5, 7, 9],dur=[1.0 ,0.75 ,0.25 ,0.5 ,0.5 ,0.5 ,0.5 ,1.0 ,0.5 ,0.5 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0])
	d1 >> pluck([5, 4, 2, 4, 5, 1, 2, 2, 1, 2, 0, 0, -1, 0, -2, -3, -5, 0, 0, 0],dur=[1.0 ,1.0 ,0.5 ,0.5 ,0.5 ,0.5 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,0.5 ,0.5 ,1.5 ,1.0 ,0.25 ,0.25 ,1.0 ,1.0 ,1.0])
	d2 >> pluck([0, 2, 4, -3, -5, -7, -5, -3, -3, -5, -7, -3, -5, -7, -5, -5, -7, -8, -3, -5, -7],dur=[0.5 ,0.5 ,0.5 ,1.0 ,0.5 ,0.5 ,0.5 ,1.0 ,1.5 ,0.5 ,1.0 ,1.0 ,0.5 ,0.5 ,1.0 ,0.75 ,0.25 ,1.0 ,1.0 ,1.0 ,1.0])
	d3 >> pluck([-7, -11, -10, -10, -8, -7, -5, -3, -15, -14, -15, -20, -22, -20, -19, -17, -15, -15, -17, -19, -20, -19],dur=[1.0 ,1.0 ,1.0 ,0.5 ,0.5 ,0.5 ,0.5 ,1.0 ,1.0 ,1.0 ,1.0 ,0.5 ,0.5 ,0.5 ,0.5 ,1.0 ,1.0 ,0.5 ,0.5 ,0.5 ,0.5 ,1.0])
@structure
def a4():
	d0 >> pluck([9, 9, 7, 5, 7, 9, 5, 4, 2, 4, 2, 2, 2, 2],dur=[1.0 ,0.5 ,0.5 ,0.75 ,0.25 ,1.0 ,1.0 ,1.0 ,1.0 ,2.0 ,1.0 ,1.0 ,2.0 ,3.0])
	d1 >> pluck([0, 1, 2, -3, 2, 2, 2, 0, -1, 0, 0, -2, -3, -5, -2, -3],dur=[0.5 ,0.5 ,1.0 ,1.0 ,1.0 ,1.0 ,0.5 ,1.0 ,0.5 ,2.0 ,0.5 ,0.5 ,1.0 ,1.5 ,0.5 ,3.0])
	d2 >> pluck([-3, -5, -7, -8, -10, -8, -7, -5, -3, -3, -8, -7, -5, -3, -5, -6, -5, -10, -5, -5, -6, -8, -6],dur=[0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,1.0 ,0.5 ,0.5 ,1.0 ,2.0 ,0.5 ,1.0 ,0.5 ,0.5 ,0.5 ,1.0 ,1.0 ,0.5 ,0.5 ,1.0])
	d3 >> pluck([-7, -8, -10, -10, -8, -7, -5, -3, -15, -10, -12, -18, -17, -12, -12, -14, -15, -14, -17, -10, -22],dur=[0.5 ,0.5 ,2.0 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,1.0 ,2.0 ,0.5 ,0.5 ,1.0 ,0.5 ,0.25 ,0.25 ,0.5 ,0.5 ,2.0 ,1.0])
@structure
def a5():
	d0 >> pluck([2, 9, 5, 12, 9, 12, 10, 9, 7, 5, 9, 7, 5, 4, 2, 5, 7, 7],dur=[1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,0.5 ,0.5 ,1.0 ,1.0 ,1.0 ,0.5 ,0.5 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0])
	d1 >> pluck([-3, 4, 2, 0, 0, 0, 2, 4, 5, 4, 0, 4, 4, 2, 0, 0, -2, 0, 2, 0, -1],dur=[1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,0.5 ,0.5 ,0.5 ,1.0 ,0.5 ,1.0 ,1.0 ,0.5 ,1.0 ,0.5 ,0.5 ,0.5 ,1.0 ,1.0 ,0.5 ,0.5])
	d2 >> pluck([-6, -3, -3, -2, -3, -5, -7, -7, 0, -2, -3, -3, -3, -5, -3, -10, -3, -7, -10, -8, -7, -8],dur=[1.0 ,1.0 ,0.5 ,0.5 ,0.5 ,0.5 ,1.0 ,1.0 ,1.5 ,0.5 ,1.0 ,1.0 ,1.0 ,0.5 ,0.5 ,1.0 ,0.5 ,0.5 ,0.25 ,0.25 ,1.0 ,0.5])
	d3 >> pluck([-22, -11, -10, -8, -7, -15, -14, -12, -24, -19, -11, -10, -22, -20, -18, -17, -15, -13, -12],dur=[1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,0.5 ,0.5 ,1.0 ,1.0 ,1.0 ,1.0 ,0.5 ,0.5 ,0.5 ,0.5 ,1.0 ,1.0 ,1.0 ,1.0])
@structure
def a6():
	d0 >> pluck([2, 0, 5, 7, 9, 9, 7, 5, 7, 9, 5, 4, 2, 4, 2, 2],dur=[1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,0.5 ,0.5 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,2.0 ,1.0 ,1.0])
	d1 >> pluck([-3, -1, 0, -2, -3, -5, -3, 2, 0, 0, 5, 4, 2, 0, -2, -3, 2, 0, -1, -3, -4, 1, 2, 0],dur=[0.5 ,0.5 ,0.5 ,0.5 ,0.25 ,0.25 ,0.5 ,0.5 ,0.5 ,1.0 ,0.5 ,0.5 ,1.5 ,0.25 ,0.25 ,1.5 ,0.25 ,0.25 ,0.5 ,1.0 ,0.5 ,2.0 ,1.0 ,1.0])
	d2 >> pluck([-6, -4, -3, -5, -7, -8, -7, -8, -7, 0, 0, -2, -3, -5, -7, -8, -7, -2, -3, -4, -3, 2, -10, -3, -7, -5, -3],dur=[0.5 ,0.5 ,0.5 ,0.5 ,0.25 ,0.25 ,1.0 ,0.5 ,1.0 ,1.0 ,0.5 ,0.25 ,0.25 ,1.5 ,0.25 ,0.25 ,0.5 ,0.25 ,0.25 ,0.5 ,0.5 ,0.5 ,0.5 ,2.0 ,0.5 ,0.5 ,1.0])
	d3 >> pluck([-12, -13, -15, -15, -10, -14, -12, -7, -19, -14, -9, -10, -11, -10, -10, -12, -13, -15, -14, -15, -17, -18],dur=[0.5 ,0.5 ,1.0 ,0.5 ,0.5 ,0.5 ,0.5 ,1.0 ,1.0 ,1.0 ,0.5 ,0.5 ,1.0 ,1.0 ,0.5 ,0.5 ,1.0 ,2.0 ,0.5 ,0.5 ,0.5 ,0.5])
Clock.clear()

start = Clock.mod(16) - 0.1
Clock.schedule(a0, start + 0)
Clock.schedule(a1, start + 16)
Clock.schedule(a2, start + 32)
Clock.schedule(a3, start + 48)
Clock.schedule(a4, start + 64)
Clock.schedule(a5, start + 80)
Clock.schedule(a6, start + 96)
Clock.schedule(lambda : Clock.clear(), start + 112)
