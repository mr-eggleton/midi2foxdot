Scale.default = list(range(12))
def structure(f):
    f()
    return f
@structure
def a0():
	d0 >> pluck([12, 14, 16, 14, 12, 11, 9, 7, 12, 14, 16, 14, 16, 17, 16, 14, 12, 12],dur=[1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,0.5 ,0.25 ,0.25 ,1.0 ,0.75 ,0.25 ,2.0])
	d1 >> pluck([7, 7, 7, 7, 9, 2, 2, 2, 7, 9, 11, 12, 7, 7, 7, 7, 7],dur=[1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,0.5 ,0.5 ,0.5 ,0.5 ,1.0 ,1.0 ,1.0 ,2.0])
	d2 >> pluck([4, -1, 0, 2, 4, 6, 7, 7, 6, -1, 0, 5, 7, 0, 2, 2, 0, 0, -1, 4],dur=[1.0 ,1.0 ,1.0 ,1.0 ,0.5 ,0.5 ,1.0 ,0.5 ,0.5 ,1.0 ,1.0 ,1.0 ,0.5 ,0.5 ,1.0 ,0.5 ,0.5 ,0.5 ,0.5 ,2.0])
	d3 >> pluck([-12, -5, 0, -1, -3, -5, -10, -5, -8, -10, -12, -13, -12, -17, -12],dur=[1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,2.0])
@structure
def a1():
	d0 >> pluck([16, 17, 19, 17, 16, 14, 16, 19, 19, 21, 19, 17, 16, 14],dur=[1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,2.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,2.0])
	d1 >> pluck([7, 9, 10, 12, 10, 9, 7, 5, 9, 8, 9, 7, 12, 12, 11, 9, 7, 6, 7],dur=[1.0 ,0.5 ,0.25 ,0.25 ,1.0 ,1.0 ,1.0 ,0.5 ,0.25 ,0.25 ,2.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,0.5 ,0.5 ,2.0])
	d2 >> pluck([0, 0, 0, 0, 2, 4, -3, -3, -1, 1, 0, 2, 4, 5, 4, 2, 0, 0, -1],dur=[1.0 ,1.0 ,1.0 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,2.0 ,0.5 ,0.5 ,1.0 ,0.5 ,0.5 ,1.0 ,1.0 ,1.0 ,2.0])
	d3 >> pluck([0, -3, -8, -7, -11, -10, -15, -8, -12, -7, -5, -3, -1, 0, -5],dur=[1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,2.0 ,1.0 ,1.0 ,1.0 ,1.0 ,0.5 ,0.5 ,1.0 ,2.0])
@structure
def a2():
	d0 >> pluck([16, 19, 17, 16, 14, 12, 14, 16, 12, 16, 19, 17, 16, 14, 12],dur=[1.0 ,1.0 ,1.0 ,0.5 ,0.5 ,1.0 ,1.0 ,2.0 ,2.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0])
	d1 >> pluck([7, 12, 11, 9, 11, 12, 9, 9, 11, 4, 4, 7, 9, 10, 9, 11, 12, 7, 7],dur=[1.0 ,0.5 ,0.5 ,0.5 ,0.5 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,2.0 ,0.5 ,0.5 ,1.0 ,0.5 ,0.5 ,1.0 ,1.0 ,1.0])
	d2 >> pluck([0, 2, 4, 5, 7, -5, -3, 4, 2, 0, -1, -3, -2, -8, -7, -5, -3, -1, 0],dur=[0.5 ,0.5 ,1.0 ,1.0 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,2.0 ,2.0 ,1.0 ,1.0 ,1.0 ,0.5 ,0.5 ,1.0 ,1.0])
	d3 >> pluck([0, -12, -10, -8, -7, -6, -5, -4, -3, -5, -12, -10, -8, -7, -5, -7, -8, -12],dur=[1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,2.0 ,1.0 ,1.0 ,1.0 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5])
Clock.clear()

start = Clock.mod(16) - 0.1
Clock.schedule(a0, start + 0)
Clock.schedule(a1, start + 16)
Clock.schedule(a2, start + 32)
Clock.schedule(lambda : Clock.clear(), start + 48)
