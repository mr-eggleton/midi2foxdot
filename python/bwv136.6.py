Scale.default = list(range(12))
def structure(f):
    f()
    return f
@structure
def a0():
	d0 >> pluck([23, 21, 19, 16, 13, 18, 11, 18, 23, 22, 23, 18, 18, 23, 16, 14, 13, 18, 14, 13, 11, 18],dur=[0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.25 ,0.25 ,0.5 ,3.0 ,1.0 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,3.0])
	d1 >> pluck([11, 11, 13, 14, 16, 18, 18, 18, 16, 14, 16, 13],dur=[1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,3.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,3.0])
	d2 >> pluck([6, 7, 6, 6, 7, 1, 6, 8, 10, 11, 13, 10],dur=[1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,3.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,3.0])
	d3 >> pluck([2, 4, 4, 2, 1, -1, -2, -2, -1, 1, 2, 7, 6],dur=[1.0 ,1.0 ,1.0 ,1.0 ,0.5 ,0.5 ,3.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,3.0])
	d4 >> pluck([-1, 4, -2, -1, -3, -5, -6, -8, -10, -11, -13, -8, -6],dur=[1.0 ,1.0 ,1.0 ,0.5 ,0.5 ,1.0 ,3.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,3.0])
@structure
def a1():
	d0 >> pluck([18, 16, 14, 23, 21, 19, 18, 16, 14, 26, 25, 26, 25, 23, 22, 23, 25, 21, 21, 14, 13, 11, 9, 19, 18, 26, 23, 19, 16, 21, 18],dur=[0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,1.0])
	d1 >> pluck([13, 14, 16, 18, 18, 16, 18, 18, 14, 16, 18, 18, 16, 14],dur=[1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,2.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,2.0 ,1.0])
	d2 >> pluck([10, 11, 4, 2, 9, 9, 10, 6, 6, 8, 9, 9, 9, 11, 9, 9],dur=[1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,2.0 ,1.0 ,1.0 ,0.5 ,0.5 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0])
	d3 >> pluck([-6, -6, -3, -3, -1, 1, 1, 1, -1, 1, 2, 2, 2, 1, 2],dur=[1.0 ,1.0 ,1.0 ,1.5 ,0.5 ,2.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0])
	d4 >> pluck([-6, -13, -11, -10, -8, -6, -5, -3, -1, -3, -5, -6, -4, -2, -6, -1, -3, -5, -6, -8, -10, -6, -5, -8, -3, -15, -10],dur=[1.0 ,1.0 ,1.0 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,1.0 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,1.0])
@structure
def a2():
	d0 >> pluck([21, 21, 16, 18, 21, 25, 16, 14, 18, 23, 21, 23, 20, 21, 23, 22, 23, 25, 22, 26, 18, 23, 23, 26, 25, 23, 22, 23],dur=[1.0 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,1.0 ,1.0 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,1.0 ,0.25 ,0.25 ,0.25 ,0.25 ,1.0 ,1.0])
	d1 >> pluck([18, 21, 18, 18, 18, 16, 16, 16, 18, 16, 14, 16, 14, 13, 11],dur=[1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,2.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,0.5 ,0.5 ,2.0 ,1.0])
	d2 >> pluck([9, 9, 14, 13, 11, 11, 4, 11, 13, 13, 6, 7, 7, 6, 6],dur=[1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,2.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0])
	d3 >> pluck([2, 4, -3, 2, 4, 1, 2, 2, 1, -1, 6, -2, -1, -1, 4, 2, 1, 3],dur=[1.0 ,1.0 ,0.5 ,0.5 ,0.5 ,0.5 ,1.0 ,2.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,0.5 ,0.5 ,1.0 ,1.0])
	d4 >> pluck([2, 1, 2, -2, -1, -3, -4, -6, -4, -8, -3, -5, -6, -8, -10, -11, -1, -3, -5, -6, -8, -11, -6, -18, -13],dur=[1.0 ,1.0 ,1.0 ,1.0 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,1.0 ,1.0 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,1.0])
Clock.clear()

start = Clock.mod(16) - 0.1
Clock.schedule(a0, start + 0)
Clock.schedule(a1, start + 16)
Clock.schedule(a2, start + 32)
Clock.schedule(lambda : Clock.clear(), start + 48)
