Scale.default = list(range(12))
def structure(f):
    f()
    return f
@structure
def a0():
	d0 >> pluck([7, 7, 2, 7, 12, 11, 9, 7, 7, 9, 11, 12, 11, 9, 4, 6, 7],dur=[1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,0.5 ,0.5 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0])
	d1 >> pluck([2, 2, -3, 2, 9, 2, 2, 0, -1, -1, 1, 2, 5, 4, 6, 7, 2, -3, -1, 0, -1],dur=[1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,0.75 ,0.25 ,1.0 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,1.0 ,0.5 ,0.25 ,0.25 ,2.0 ,1.0])
	d2 >> pluck([-1, -3, -5, -6, -5, -6, -5, -6, -10, -5, -6, -4, -3, -10, -8, -6, -5, -3, -10],dur=[0.5 ,0.5 ,1.0 ,1.0 ,1.5 ,0.5 ,1.5 ,0.5 ,1.0 ,1.0 ,0.5 ,0.5 ,1.0 ,0.5 ,0.5 ,1.0 ,1.0 ,1.0 ,1.0])
	d3 >> pluck([-17, -15, -13, -12, -10, -12, -13, -15, -17, -13, -10, -17, -8, -10, -15, -13, -12, -10, -12, -13, -15, -17],dur=[0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,1.0 ,1.0 ,0.5 ,0.5 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,0.5 ,0.5 ,1.0 ,0.5 ,0.5 ,1.0 ,1.0])
@structure
def a1():
	d0 >> pluck([7, 12, 11, 9, 14, 14, 13, 14, 14, 16, 12, 14, 12, 11, 9, 7],dur=[1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.5 ,0.5 ,1.0 ,1.0 ,1.0])
	d1 >> pluck([2, 7, 9, 7, 6, 4, 9, 6, 4, 7, 6, 4, 6, 7, 7, 7, 9, 6, 7, 9, 9, 7, 6, 4],dur=[1.0 ,0.5 ,1.0 ,0.25 ,0.25 ,1.0 ,0.5 ,0.5 ,0.5 ,1.0 ,0.25 ,0.25 ,1.0 ,1.0 ,1.0 ,1.0 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,1.0 ,0.5 ,1.0])
	d2 >> pluck([-1, 4, 2, 2, 1, 2, -1, -8, -3, -3, 2, 2, 0, -1, 0, 4, 2, 0, -1, -3, -1, 0, 2, 0, -1],dur=[1.0 ,0.5 ,0.5 ,1.0 ,1.0 ,1.0 ,0.5 ,0.5 ,1.0 ,1.0 ,1.0 ,0.5 ,0.25 ,0.25 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.25 ,0.25 ,1.0 ,0.5 ,1.0])
	d3 >> pluck([-5, -6, -8, -6, -5, -5, -3, -5, -6, -1, -5, -3, -15, -10, -13, -12, -10, -8, -6, -10, -8, -6, -5, -10, -8],dur=[0.5 ,0.5 ,0.5 ,0.5 ,1.0 ,0.5 ,0.25 ,0.25 ,0.5 ,0.5 ,1.0 ,0.5 ,0.5 ,1.0 ,1.0 ,0.5 ,0.5 ,1.0 ,0.5 ,0.5 ,0.5 ,0.5 ,1.0 ,1.0 ,1.0])
Clock.clear()

start = Clock.mod(16) - 0.1
Clock.schedule(a0, start + 0)
Clock.schedule(a1, start + 16)
Clock.schedule(lambda : Clock.clear(), start + 32)
