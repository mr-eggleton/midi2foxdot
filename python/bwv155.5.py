Scale.default = list(range(12))
def structure(f):
    f()
    return f
@structure
def a0():
	d0 >> pluck([12, 12, 12, 12, 14, 15, 14, 12, 10, 12, 10, 9, 7, 5, 7, 9, 11, 12, 14, 14, 12],dur=[1.0 ,1.0 ,1.0 ,0.5 ,0.5 ,1.0 ,1.0 ,1.0 ,1.0 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,1.0 ,1.0 ,0.75 ,0.25 ,1.0 ,1.0])
	d1 >> pluck([5, 5, 4, 5, 7, 5, 5, 3, 2, 0, 0, 0, 5, 9, 7, 5, 4, 5, 7, 5, 4],dur=[1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,0.5 ,0.5 ,1.0 ,1.0 ,1.0 ,1.0 ,0.5 ,0.5 ,0.5 ,0.5 ,0.75 ,0.25 ,0.75 ,0.25 ,1.0])
	d2 >> pluck([-3, -2, 0, 2, 0, -2, -3, -5, -3, -2, -3, -2, -5, -7, -5, -3, -2, 0, 2, -5, 0, -1, 0],dur=[0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,1.0 ,0.5 ,0.5 ,1.0 ,1.0 ,1.0 ,1.0 ,0.5 ,0.5 ,0.5 ,0.5 ,1.0 ,1.0 ,0.5 ,1.0 ,0.5 ,1.0])
	d3 >> pluck([-7, -15, -14, -12, -19, -12, -10, -9, -7, -5, -8, -7, -19, -7, -8, -10, -12, -17, -12],dur=[1.0 ,0.5 ,0.5 ,1.0 ,1.0 ,1.0 ,0.5 ,0.5 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,0.5 ,0.5 ,1.0 ,1.0 ,1.0 ,1.0])
@structure
def a1():
	d0 >> pluck([12, 17, 16, 14, 16, 17, 16, 14, 12, 12, 17, 12, 14, 9, 10, 12, 10, 9],dur=[1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,0.5 ,0.5 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,0.5 ,0.5 ,1.0 ,1.0 ,1.0])
	d1 >> pluck([5, 7, 9, 7, 7, 5, 4, 7, 0, 9, 2, 7, 4, 5, 7, 9, 10, 9, 7, 5, 5, 4, 2, 4, 6],dur=[0.5 ,0.5 ,1.0 ,1.0 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,1.0 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,1.0 ,1.0 ,1.0 ,0.5 ,0.5 ,1.0])
	d2 >> pluck([-3, -3, -1, 0, -1, -3, -5, -7, 0, -1, 0, -3, -2, 0, 5, 4, 2, 2, -5, -3, -2, 0, 2],dur=[1.0 ,0.5 ,0.5 ,1.0 ,0.5 ,0.5 ,1.0 ,0.5 ,0.5 ,1.0 ,1.0 ,0.5 ,0.5 ,1.0 ,0.5 ,0.5 ,1.0 ,1.0 ,0.5 ,0.5 ,0.5 ,0.5 ,1.0])
	d3 >> pluck([-7, -8, -10, -8, -7, -5, -12, -13, -15, -17, -17, -12, -7, -19, -17, -15, -14, -12, -10, -8, -6, -5, -10],dur=[0.5 ,0.5 ,1.0 ,0.5 ,0.5 ,1.0 ,0.5 ,0.5 ,0.5 ,0.5 ,1.0 ,1.0 ,1.0 ,0.5 ,0.5 ,1.0 ,0.5 ,0.5 ,1.0 ,0.5 ,0.5 ,1.0 ,1.0])
Clock.clear()

start = Clock.mod(16) - 0.1
Clock.schedule(a0, start + 0)
Clock.schedule(a1, start + 16)
Clock.schedule(lambda : Clock.clear(), start + 32)
