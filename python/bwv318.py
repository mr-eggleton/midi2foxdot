Scale.default = list(range(12))
def structure(f):
    f()
    return f
@structure
def a0():
	d0 >> pluck([7, 7, 9, 11, 12, 14, 16, 14, 16, 18, 19, 14, 11, 13, 14],dur=[1.0 ,0.5 ,0.5 ,1.0 ,1.0 ,1.0 ,1.0 ,2.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,2.0])
	d1 >> pluck([2, 4, 6, 7, 6, 4, 2, 6, 11, 9, 6, 9, 9, 7, 9, 7, 6, 4, 6],dur=[1.0 ,0.5 ,0.5 ,1.0 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,2.0 ,1.0 ,1.0 ,1.0 ,1.0 ,0.5 ,0.5 ,1.0 ,2.0])
	d2 >> pluck([-1, 0, 2, 0, -1, 0, 2, 1, 2, 0, -1, 0, 2, -1, -3, 2, -3, -3],dur=[1.0 ,1.0 ,1.0 ,1.0 ,0.25 ,0.25 ,1.0 ,0.5 ,2.0 ,0.5 ,0.5 ,0.5 ,0.5 ,1.0 ,1.0 ,1.0 ,1.0 ,2.0])
	d3 >> pluck([-5, -12, -17, -5, -3, -1, -3, -5, -3, -10, -3, -10, -8, -6, -5, -3, -10],dur=[1.0 ,1.0 ,0.5 ,0.5 ,1.0 ,0.5 ,0.5 ,0.5 ,0.5 ,2.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,2.0])
@structure
def a1():
	d0 >> pluck([12, 9, 11, 12, 11, 9, 7, 6, 7, 9, 11, 9, 7, 6, 4],dur=[1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,2.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.5 ,0.5 ,1.0 ,1.0])
	d1 >> pluck([4, 2, 2, 0, 2, 0, -1, 2, 1, -1, -3, 2, 4, 4, 2, 1],dur=[1.0 ,1.0 ,1.0 ,1.0 ,1.5 ,0.5 ,2.0 ,1.0 ,0.5 ,0.5 ,1.0 ,1.0 ,2.0 ,0.5 ,1.0 ,0.5])
	d2 >> pluck([-5, -3, -5, -6, -5, -5, -6, -5, -3, -5, 2, 1, -1, -8, -3, -5],dur=[1.0 ,1.0 ,0.5 ,0.5 ,1.0 ,1.0 ,1.0 ,2.0 ,1.0 ,1.0 ,0.5 ,0.5 ,1.0 ,1.0 ,2.0 ,1.0])
	d3 >> pluck([-8, -6, -5, -8, -10, -12, -10, -17, -10, -8, -6, -5, -11, -15, -10, -15],dur=[1.0 ,1.0 ,1.0 ,1.0 ,0.5 ,0.5 ,1.0 ,2.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0])
@structure
def a2():
	d0 >> pluck([2, 7, 7, 9, 11, 12, 14, 16, 14, 7, 9, 11, 12],dur=[4.0 ,1.0 ,0.5 ,0.5 ,1.0 ,1.0 ,1.0 ,1.0 ,2.0 ,1.0 ,1.0 ,1.0 ,1.0])
	d1 >> pluck([-3, 2, 4, 6, 7, 7, 5, 4, 6, 7, 7, 4, 2, 0, -1, -3, -5, 6],dur=[4.0 ,1.0 ,0.5 ,0.5 ,1.0 ,1.0 ,1.0 ,0.5 ,0.5 ,2.0 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5 ,0.5])
	d2 >> pluck([-6, -5, 0, 2, 0, 0, -1, 0, -1, -1, -3, 2, 4, -3],dur=[4.0 ,1.0 ,1.0 ,1.0 ,1.0 ,0.5 ,0.5 ,1.0 ,2.0 ,1.0 ,1.0 ,1.0 ,0.5 ,0.5])
	d3 >> pluck([-10, -13, -12, -5, -8, -10, -12, -5, -8, -6, -5, -8],dur=[4.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,1.0 ,2.0 ,1.0 ,1.0 ,1.0 ,1.0])
Clock.clear()

start = Clock.mod(16) - 0.1
Clock.schedule(a0, start + 0)
Clock.schedule(a1, start + 16)
Clock.schedule(a2, start + 32)
Clock.schedule(lambda : Clock.clear(), start + 48)
